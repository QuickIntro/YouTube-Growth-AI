version: '3.8'

services:
  # PostgreSQL Database (Supabase alternative for local dev)
  postgres:
    image: postgres:15-alpine
    container_name: yt-growth-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: youtube_growth_ai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: yt-growth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yt-growth-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/youtube_growth_ai
      - REDIS_URL=redis://redis:6379
      - THUMBNAIL_SERVICE_URL=http://thumbnail-service:8000
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:prod
    restart: unless-stopped

  # Thumbnail Analyzer Microservice (Python FastAPI)
  thumbnail-service:
    build:
      context: ./thumbnail-service
      dockerfile: Dockerfile
    container_name: yt-growth-thumbnail
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - ./thumbnail-service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
        - NEXT_PUBLIC_ADSENSE_CLIENT_ID=${NEXT_PUBLIC_ADSENSE_CLIENT_ID}
    container_name: yt-growth-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:4000
    env_file:
      - .env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm start
    restart: unless-stopped

  # BullMQ Worker (Background Jobs)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yt-growth-worker
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/youtube_growth_ai
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:worker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: youtube-growth-network

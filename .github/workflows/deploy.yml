name: Deploy YouTube Growth AI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  PYTHON_VERSION: '3.11'

jobs:
  # Frontend Build & Deploy (Render)
  deploy-frontend-render:
    runs-on: ubuntu-latest
    if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_FRONTEND_SERVICE_ID != '' }}
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_FRONTEND_SERVICE_ID: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Trigger Render deploy (Frontend)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_FRONTEND_SERVICE_ID: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/services/$RENDER_FRONTEND_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json"

  # Backend Build & Deploy (Render)
  deploy-backend:
    runs-on: ubuntu-latest
    if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_SERVICE_ID != '' }}
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Build
        working-directory: ./backend
        run: npm run build

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json"

  # Thumbnail Service Deploy (Render)
  deploy-thumbnail-service:
    runs-on: ubuntu-latest
    if: ${{ secrets.RENDER_API_KEY != '' && secrets.RENDER_THUMBNAIL_SERVICE_ID != '' }}
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_THUMBNAIL_SERVICE_ID: ${{ secrets.RENDER_THUMBNAIL_SERVICE_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        working-directory: ./thumbnail-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_THUMBNAIL_SERVICE_ID: ${{ secrets.RENDER_THUMBNAIL_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/services/$RENDER_THUMBNAIL_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json"

  # Run Tests
  test:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test Frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run lint

      - name: Test Backend
        working-directory: ./backend
        run: |
          npm ci
          npm run lint
          npm run test

      - name: Test Thumbnail Service
        working-directory: ./thumbnail-service
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          # pytest tests/ (add when tests are created)
